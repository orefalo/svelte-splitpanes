import{f as a,q as o,J as s,t as n,k as u,r as c,E as d,N as m,x as t,O as l}from"../chunks/yeWveBFq.js";const f=!0,h=Object.freeze(Object.defineProperty({__proto__:null,prerender:f},Symbol.toStringTag,{value:"Module"}));var g=a('<h1>Welcome to Svelte-Splitpane demo!</h1> <a href="https://github.com/orefalo/svelte-splitpanes">https://github.com/orefalo/svelte-splitpanes</a> <h2>Features</h2> <a><img alt="Minified Size"/></a> <ul><li>Support both dynamic horizontal and vertical splits</li> <li>Support defaults, min and max sizes</li> <li>Support multiple splits</li> <li>Support lifecyle events</li> <li>Support custom divider size or overlay</li> <li>Support splitter pane pushing</li> <li>Support RTL rendering with auto-detection</li> <li>Support first splitter on/off</li> <li>Support pane toggle</li> <li>Support edge snapping</li> <li>Support programmatic resizing and two-way size binding</li> <li>Support programmatic panes add/remove</li> <li>Support programmatic panes reordering by Svelte keyed each blocks</li> <li>Support for legacy browser such as IE 11</li> <li>Support for touch devices</li> <li>Sveltekit & Typescript friendly</li></ul>',1);function v(r){var i=g(),e=o(s(i),6),p=c(e);d(e),m(2),n(()=>{t(e,"href",`${l??""}/minified-size`),t(p,"src",`${l??""}/minified-size-badge.svg`)}),u(r,i)}export{v as component,h as universal};
