import{S as M,i as Q,s as F,e as _,P as z,f as b,z as E,h as d,j as x,Q as P,l as o,k as S,A,o as m,p as $,B as N,t as B,b as C,C as I,M as j}from"../../../../chunks/external-069c0b55.js";import{S as G,P as R}from"../../../../chunks/svelte-splitpanes-b27990ef.js";import{C as J}from"../../../../chunks/CodeArea-8a6a8f55.js";function K(p){let e,l;return{c(){e=_("span"),l=z("1")},l(a){e=d(a,"SPAN",{});var s=x(e);l=P(s,"1"),s.forEach(o)},m(a,s){m(a,e,s),$(e,l)},p:j,d(a){a&&o(e)}}}function L(p){let e,l;return{c(){e=_("span"),l=z("2")},l(a){e=d(a,"SPAN",{});var s=x(e);l=P(s,"2"),s.forEach(o)},m(a,s){m(a,e,s),$(e,l)},p:j,d(a){a&&o(e)}}}function O(p){let e,l;return{c(){e=_("span"),l=z("3")},l(a){e=d(a,"SPAN",{});var s=x(e);l=P(s,"3"),s.forEach(o)},m(a,s){m(a,e,s),$(e,l)},p:j,d(a){a&&o(e)}}}function T(p){let e,l,a,s,f,c;return e=new R({props:{size:65,$$slots:{default:[K]},$$scope:{ctx:p}}}),a=new R({props:{size:10,$$slots:{default:[L]},$$scope:{ctx:p}}}),f=new R({props:{size:25,$$slots:{default:[O]},$$scope:{ctx:p}}}),{c(){E(e.$$.fragment),l=b(),E(a.$$.fragment),s=b(),E(f.$$.fragment)},l(t){A(e.$$.fragment,t),l=S(t),A(a.$$.fragment,t),s=S(t),A(f.$$.fragment,t)},m(t,r){N(e,t,r),m(t,l,r),N(a,t,r),m(t,s,r),N(f,t,r),c=!0},p(t,r){const g={};r&2&&(g.$$scope={dirty:r,ctx:t}),e.$set(g);const w={};r&2&&(w.$$scope={dirty:r,ctx:t}),a.$set(w);const y={};r&2&&(y.$$scope={dirty:r,ctx:t}),f.$set(y)},i(t){c||(B(e.$$.fragment,t),B(a.$$.fragment,t),B(f.$$.fragment,t),c=!0)},o(t){C(e.$$.fragment,t),C(a.$$.fragment,t),C(f.$$.fragment,t),c=!1},d(t){I(e,t),t&&o(l),I(a,t),t&&o(s),I(f,t)}}}function U(p){let e,l,a,s,f,c,t,r,g,w,y,k,h,q,v,D;return h=new G({props:{class:"default-theme",horizontal:!0,style:"height: 400px",$$slots:{default:[T]},$$scope:{ctx:p}}}),v=new J({props:{id:"default_size",code:p[0]}}),{c(){e=_("h2"),l=z("Default pane size"),a=b(),s=_("p"),f=z(`Provide dimension of your panes when they first load (will be used for the width or height respectively for the
	vertical or horizontal layout).`),c=_("br"),t=b(),r=_("b"),g=z(`If you provide a default size, make sure you provide it for all the panes for a total equals to 100%. If a pane is
		missing a default size, then all the panes will have the same size.`),w=_("br"),y=z(" Note that setting a default value is different than setting a min or max value."),k=b(),E(h.$$.fragment),q=b(),E(v.$$.fragment)},l(n){e=d(n,"H2",{});var i=x(e);l=P(i,"Default pane size"),i.forEach(o),a=S(n),s=d(n,"P",{});var u=x(s);f=P(u,`Provide dimension of your panes when they first load (will be used for the width or height respectively for the
	vertical or horizontal layout).`),c=d(u,"BR",{}),t=S(u),r=d(u,"B",{});var H=x(r);g=P(H,`If you provide a default size, make sure you provide it for all the panes for a total equals to 100%. If a pane is
		missing a default size, then all the panes will have the same size.`),H.forEach(o),w=d(u,"BR",{}),y=P(u," Note that setting a default value is different than setting a min or max value."),u.forEach(o),k=S(n),A(h.$$.fragment,n),q=S(n),A(v.$$.fragment,n)},m(n,i){m(n,e,i),$(e,l),m(n,a,i),m(n,s,i),$(s,f),$(s,c),$(s,t),$(s,r),$(r,g),$(s,w),$(s,y),m(n,k,i),N(h,n,i),m(n,q,i),N(v,n,i),D=!0},p(n,[i]){const u={};i&2&&(u.$$scope={dirty:i,ctx:n}),h.$set(u)},i(n){D||(B(h.$$.fragment,n),B(v.$$.fragment,n),D=!0)},o(n){C(h.$$.fragment,n),C(v.$$.fragment,n),D=!1},d(n){n&&o(e),n&&o(a),n&&o(s),n&&o(k),I(h,n),n&&o(q),I(v,n)}}}function V(p){return[`
<script>
	import { Pane, Splitpanes } from 'svelte-splitpanes'
</script>	
<Splitpanes class="default-theme" horizontal style="height: 400px">
    <Pane size={65}>
        <span>1</span>
    </Pane>
    <Pane size={10}>
        <span>2</span>
    </Pane>
    <Pane size={25}>
        <span>3</span>
    </Pane>
</Splitpanes>`]}class Z extends M{constructor(e){super(),Q(this,e,V,U,F,{})}}export{Z as default};
