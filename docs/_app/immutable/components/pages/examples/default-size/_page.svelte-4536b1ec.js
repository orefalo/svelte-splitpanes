import{S as L,i as M,s as Q,e as _,L as z,a as b,Q as E,b as d,d as x,M as g,g as o,f as S,R as I,j as m,k as $,T as N,n as A,o as k,V as q,I as j}from"../../../../chunks/external-b827b9fd.js";import{S as T,P as D}from"../../../../chunks/svelte-splitpanes-e5e78b7f.js";import{C as V}from"../../../../chunks/CodeArea-6af4aaf3.js";function F(p){let e,l;return{c(){e=_("span"),l=z("1")},l(a){e=d(a,"SPAN",{});var s=x(e);l=g(s,"1"),s.forEach(o)},m(a,s){m(a,e,s),$(e,l)},p:j,d(a){a&&o(e)}}}function G(p){let e,l;return{c(){e=_("span"),l=z("2")},l(a){e=d(a,"SPAN",{});var s=x(e);l=g(s,"2"),s.forEach(o)},m(a,s){m(a,e,s),$(e,l)},p:j,d(a){a&&o(e)}}}function J(p){let e,l;return{c(){e=_("span"),l=z("3")},l(a){e=d(a,"SPAN",{});var s=x(e);l=g(s,"3"),s.forEach(o)},m(a,s){m(a,e,s),$(e,l)},p:j,d(a){a&&o(e)}}}function K(p){let e,l,a,s,f,c;return e=new D({props:{size:65,$$slots:{default:[F]},$$scope:{ctx:p}}}),a=new D({props:{size:10,$$slots:{default:[G]},$$scope:{ctx:p}}}),f=new D({props:{size:25,$$slots:{default:[J]},$$scope:{ctx:p}}}),{c(){E(e.$$.fragment),l=b(),E(a.$$.fragment),s=b(),E(f.$$.fragment)},l(t){I(e.$$.fragment,t),l=S(t),I(a.$$.fragment,t),s=S(t),I(f.$$.fragment,t)},m(t,r){N(e,t,r),m(t,l,r),N(a,t,r),m(t,s,r),N(f,t,r),c=!0},p(t,r){const P={};r&2&&(P.$$scope={dirty:r,ctx:t}),e.$set(P);const w={};r&2&&(w.$$scope={dirty:r,ctx:t}),a.$set(w);const y={};r&2&&(y.$$scope={dirty:r,ctx:t}),f.$set(y)},i(t){c||(A(e.$$.fragment,t),A(a.$$.fragment,t),A(f.$$.fragment,t),c=!0)},o(t){k(e.$$.fragment,t),k(a.$$.fragment,t),k(f.$$.fragment,t),c=!1},d(t){q(e,t),t&&o(l),q(a,t),t&&o(s),q(f,t)}}}function O(p){let e,l,a,s,f,c,t,r,P,w,y,B,h,C,v,R;return h=new T({props:{class:"default-theme",horizontal:!0,style:"height: 400px",$$slots:{default:[K]},$$scope:{ctx:p}}}),v=new V({props:{id:"default_size",code:p[0]}}),{c(){e=_("h2"),l=z("Default pane size"),a=b(),s=_("p"),f=z(`Provide dimension of your panes when they first load (will be used for the width or height respectively for the
	vertical or horizontal layout).`),c=_("br"),t=b(),r=_("b"),P=z(`If you provide a default size, make sure you provide it for all the panes for a total equals to 100%. If a pane is
		missing a default size, then all the panes will have the same size.`),w=_("br"),y=z(" Note that setting a default value is different than setting a min or max value."),B=b(),E(h.$$.fragment),C=b(),E(v.$$.fragment)},l(n){e=d(n,"H2",{});var i=x(e);l=g(i,"Default pane size"),i.forEach(o),a=S(n),s=d(n,"P",{});var u=x(s);f=g(u,`Provide dimension of your panes when they first load (will be used for the width or height respectively for the
	vertical or horizontal layout).`),c=d(u,"BR",{}),t=S(u),r=d(u,"B",{});var H=x(r);P=g(H,`If you provide a default size, make sure you provide it for all the panes for a total equals to 100%. If a pane is
		missing a default size, then all the panes will have the same size.`),H.forEach(o),w=d(u,"BR",{}),y=g(u," Note that setting a default value is different than setting a min or max value."),u.forEach(o),B=S(n),I(h.$$.fragment,n),C=S(n),I(v.$$.fragment,n)},m(n,i){m(n,e,i),$(e,l),m(n,a,i),m(n,s,i),$(s,f),$(s,c),$(s,t),$(s,r),$(r,P),$(s,w),$(s,y),m(n,B,i),N(h,n,i),m(n,C,i),N(v,n,i),R=!0},p(n,[i]){const u={};i&2&&(u.$$scope={dirty:i,ctx:n}),h.$set(u)},i(n){R||(A(h.$$.fragment,n),A(v.$$.fragment,n),R=!0)},o(n){k(h.$$.fragment,n),k(v.$$.fragment,n),R=!1},d(n){n&&o(e),n&&o(a),n&&o(s),n&&o(B),q(h,n),n&&o(C),q(v,n)}}}function U(p){return[`
<script>
	import { Pane, Splitpanes } from 'svelte-splitpanes'
</script>	
<Splitpanes class="default-theme" horizontal style="height: 400px">
    <Pane size={65}>
        <span>1</span>
    </Pane>
    <Pane size={10}>
        <span>2</span>
    </Pane>
    <Pane size={25}>
        <span>3</span>
    </Pane>
</Splitpanes>`]}class Z extends L{constructor(e){super(),M(this,e,U,O,Q,{})}}export{Z as default};
